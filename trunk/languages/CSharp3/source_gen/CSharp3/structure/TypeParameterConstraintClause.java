package CSharp3.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TypeParameterConstraintClause extends BaseConcept {
  public static final String concept = "CSharp3.structure.TypeParameterConstraintClause";
  public static final String TYPE_PARAMETER = "typeParameter";

  public TypeParameterConstraintClause(SNode node) {
    super(node);
  }

  public TypeParameter getTypeParameter() {
    return (TypeParameter)this.getReferent(TypeParameter.class, TypeParameterConstraintClause.TYPE_PARAMETER);
  }

  public void setTypeParameter(TypeParameter node) {
    super.setReferent(TypeParameterConstraintClause.TYPE_PARAMETER, node);
  }


  public static TypeParameterConstraintClause newInstance(SModel sm, boolean init) {
    return (TypeParameterConstraintClause)SModelUtil_new.instantiateConceptDeclaration("CSharp3.structure.TypeParameterConstraintClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TypeParameterConstraintClause newInstance(SModel sm) {
    return TypeParameterConstraintClause.newInstance(sm, false);
  }

}
