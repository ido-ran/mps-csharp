package CSharp3.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InterfaceIndexerDeclaration extends BaseConcept implements IAttributed, IInterfaceMember {
  public static final String concept = "CSharp3.structure.InterfaceIndexerDeclaration";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String HIDES_INHERITED_MEMBER = "hidesInheritedMember";
  public static final String ATTRIBUTES = "attributes";

  public InterfaceIndexerDeclaration(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(InterfaceIndexerDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InterfaceIndexerDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InterfaceIndexerDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InterfaceIndexerDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InterfaceIndexerDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InterfaceIndexerDeclaration.VIRTUAL_PACKAGE, value);
  }

  public boolean getHidesInheritedMember() {
    return this.getBooleanProperty(InterfaceIndexerDeclaration.HIDES_INHERITED_MEMBER);
  }

  public void setHidesInheritedMember(boolean value) {
    this.setBooleanProperty(InterfaceIndexerDeclaration.HIDES_INHERITED_MEMBER, value);
  }

  public int getAttributesesCount() {
    return this.getChildCount(InterfaceIndexerDeclaration.ATTRIBUTES);
  }

  public Iterator<Attribute> attributeses() {
    return this.children(Attribute.class, InterfaceIndexerDeclaration.ATTRIBUTES);
  }

  public List<Attribute> getAttributeses() {
    return this.getChildren(Attribute.class, InterfaceIndexerDeclaration.ATTRIBUTES);
  }

  public void addAttributes(Attribute node) {
    this.addChild(InterfaceIndexerDeclaration.ATTRIBUTES, node);
  }

  public void insertAttributes(Attribute prev, Attribute node) {
    this.insertChild(prev, InterfaceIndexerDeclaration.ATTRIBUTES, node);
  }


  public static InterfaceIndexerDeclaration newInstance(SModel sm, boolean init) {
    return (InterfaceIndexerDeclaration)SModelUtil_new.instantiateConceptDeclaration("CSharp3.structure.InterfaceIndexerDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InterfaceIndexerDeclaration newInstance(SModel sm) {
    return InterfaceIndexerDeclaration.newInstance(sm, false);
  }

}
