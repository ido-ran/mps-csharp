package CSharp3.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GenericTypeReference extends BaseConcept {
  public static final String concept = "CSharp3.structure.GenericTypeReference";
  public static final String TYPE_PARAMETERS = "typeParameters";

  public GenericTypeReference(SNode node) {
    super(node);
  }

  public int getTypeParametersesCount() {
    return this.getChildCount(GenericTypeReference.TYPE_PARAMETERS);
  }

  public Iterator<Type> typeParameterses() {
    return this.children(Type.class, GenericTypeReference.TYPE_PARAMETERS);
  }

  public List<Type> getTypeParameterses() {
    return this.getChildren(Type.class, GenericTypeReference.TYPE_PARAMETERS);
  }

  public void addTypeParameters(Type node) {
    this.addChild(GenericTypeReference.TYPE_PARAMETERS, node);
  }

  public void insertTypeParameters(Type prev, Type node) {
    this.insertChild(prev, GenericTypeReference.TYPE_PARAMETERS, node);
  }


  public static GenericTypeReference newInstance(SModel sm, boolean init) {
    return (GenericTypeReference)SModelUtil_new.instantiateConceptDeclaration("CSharp3.structure.GenericTypeReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GenericTypeReference newInstance(SModel sm) {
    return GenericTypeReference.newInstance(sm, false);
  }

}
